/*
 * Copyright (c) 2017 Benjamin Scherer
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

group 'com.thatsnomoon'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.1.50'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:0.9.15'
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
//apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.18'
    compile 'net.dv8tion:JDA:3.3.1_276'

    testCompile 'org.apache.logging.log4j:log4j-core:2.8.2'
    testCompile 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.2'
}

jar {
    manifest {
        attributes 'Implementation-Version': version
    }
}

//dokka {
//    moduleName = 'kda'
//    outputFormat = 'html'
//    outputDirectory = "$buildDir/dokka"
//    sourceDirs = files('src/main/kotlin')
//    jdkVersion = 8
//}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'com.thatsnomoon'
            artifactId 'KDA'
            version project.version

            artifact jar {
                classifier ''
            }
        }
    }
}

compileKotlin {
    kotlinOptions.noReflect = "false"
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
kotlin {
    experimental {
        coroutines "enable"
    }
}